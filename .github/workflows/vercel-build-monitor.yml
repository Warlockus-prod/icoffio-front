name: 🔍 Vercel Build Monitor

# Runs after every push to main to check Vercel deployment status
on:
  push:
    branches:
      - main

jobs:
  monitor-vercel:
    name: Monitor Vercel Deployment
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: ⏳ Wait for Vercel deployment
        id: wait_deploy
        run: |
          echo "Waiting for Vercel to start deployment..."
          sleep 30
          
          # Get deployment status from Vercel API
          DEPLOYMENTS=$(curl -s "https://api.vercel.com/v6/deployments?projectId=${{ secrets.VERCEL_PROJECT_ID }}&limit=1" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" | jq -r '.deployments[0]')
          
          DEPLOY_STATE=$(echo "$DEPLOYMENTS" | jq -r '.state')
          DEPLOY_URL=$(echo "$DEPLOYMENTS" | jq -r '.url')
          
          echo "state=$DEPLOY_STATE" >> $GITHUB_OUTPUT
          echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          
          # Wait up to 3 minutes for deployment to complete
          MAX_ATTEMPTS=36
          ATTEMPT=0
          
          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            CURRENT_STATE=$(curl -s "https://api.vercel.com/v6/deployments?projectId=${{ secrets.VERCEL_PROJECT_ID }}&limit=1" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" | jq -r '.deployments[0].state')
            
            echo "Attempt $ATTEMPT: Deployment state = $CURRENT_STATE"
            
            if [ "$CURRENT_STATE" = "READY" ]; then
              echo "✅ Deployment successful!"
              echo "final_state=READY" >> $GITHUB_OUTPUT
              exit 0
            elif [ "$CURRENT_STATE" = "ERROR" ]; then
              echo "❌ Deployment failed!"
              echo "final_state=ERROR" >> $GITHUB_OUTPUT
              exit 1
            fi
            
            ATTEMPT=$((ATTEMPT + 1))
            sleep 5
          done
          
          echo "⏱️ Timeout waiting for deployment"
          echo "final_state=TIMEOUT" >> $GITHUB_OUTPUT
      
      - name: 📤 Send success notification
        if: steps.wait_deploy.outputs.final_state == 'READY'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            ✅ <b>Vercel Deploy SUCCESS</b>
            
            <b>Commit:</b> ${{ github.event.head_commit.message }}
            <b>Author:</b> ${{ github.event.head_commit.author.name }}
            <b>SHA:</b> <code>${{ github.sha }}</code>
            
            🌐 <a href="https://app.icoffio.com">app.icoffio.com</a>
            📊 <a href="https://vercel.com/dashboard">Vercel Dashboard</a>
      
      - name: 🚨 Send error notification
        if: steps.wait_deploy.outputs.final_state == 'ERROR'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            🚨 <b>VERCEL BUILD FAILED!</b>
            
            <b>Commit:</b> ${{ github.event.head_commit.message }}
            <b>Author:</b> ${{ github.event.head_commit.author.name }}
            <b>SHA:</b> <code>${{ github.sha }}</code>
            
            ⚠️ <b>Action Required:</b>
            1. Check build logs in Vercel
            2. Fix errors
            3. Push fix
            
            🔗 <a href="https://vercel.com/dashboard">View Logs</a>
            📝 <a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}">View Commit</a>


