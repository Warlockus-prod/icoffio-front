import { NextRequest, NextResponse } from 'next/server';
import { articleGenerator } from '@/lib/article-generator';

// POST /api/generate-article
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { url, title, content, category, action } = body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ OpenAI API
    if (!process.env.OPENAI_API_KEY) {
      return NextResponse.json(
        { 
          error: 'OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
          message: '–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å OPENAI_API_KEY'
        },
        { status: 503 }
      );
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!url && !title && action !== 'check-status') {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å URL –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º' },
        { status: 400 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
    if (action === 'check-status') {
      return NextResponse.json({
        available: Boolean(process.env.OPENAI_API_KEY),
        message: '–°–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ',
        supportedLanguages: ['en', 'pl', 'de', 'ro', 'cs'],
        supportedCategories: ['ai', 'apple', 'games', 'tech']
      });
    }

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const articleInput: any = {};
    
    if (url) {
      articleInput.url = url;
    } else {
      articleInput.title = title;
      articleInput.content = content;
      articleInput.category = category || 'tech';
    }

    console.log(`üöÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é: ${articleInput.title || articleInput.url}`);

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö
    const posts = await articleGenerator.processArticle(articleInput);
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    await articleGenerator.addArticleToSystem(posts);

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const stats = {
      title: posts.ru?.title || posts.en?.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      category: posts.ru?.category || posts.en?.category,
      languages: Object.keys(posts).length,
      slug: posts.ru?.slug || posts.en?.slug,
      excerpt: posts.ru?.excerpt || posts.en?.excerpt
    };

    return NextResponse.json({
      success: true,
      message: '–°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞',
      data: {
        posts,
        stats,
        input: articleInput
      }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏:', error);
    
    return NextResponse.json(
      { 
        error: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏',
        message: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
        details: process.env.NODE_ENV === 'development' ? error : undefined
      },
      { status: 500 }
    );
  }
}

// GET /api/generate-article - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ
export async function GET() {
  return NextResponse.json({
    service: 'Article Generator API',
    version: '1.0.0',
    available: Boolean(process.env.OPENAI_API_KEY),
    endpoints: {
      'POST /api/generate-article': {
        'From URL': 'url: string',
        'From text': 'title: string, content: string, category?: string',
        'Check status': 'action: "check-status"'
      }
    },
    supportedLanguages: ['en', 'pl', 'de', 'ro', 'cs'],
    supportedCategories: ['ai', 'apple', 'games', 'tech'],
    examples: {
      fromUrl: {
        url: 'https://example.com/article'
      },
      fromText: {
        title: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏',
        content: '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏...',
        category: 'tech'
      },
      checkStatus: {
        action: 'check-status'
      }
    }
  });
}
