'use client';

import { useState } from 'react';

interface ArticleFormData {
  url: string;
  title: string;
  content: string;
  category: 'ai' | 'apple' | 'games' | 'tech';
  mode: 'url' | 'manual';
}

interface GeneratedArticle {
  title: string;
  excerpt: string;
  slug: string;
  category: {
    name: string;
    slug: string;
  } | string;
  languages: number;
}

export default function AddArticleForm() {
  const [formData, setFormData] = useState<ArticleFormData>({
    url: '',
    title: '',
    content: '',
    category: 'tech',
    mode: 'url'
  });
  
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<GeneratedArticle | null>(null);
  const [error, setError] = useState('');
  const [progress, setProgress] = useState(0);

  const categories = [
    { value: 'ai', label: 'ü§ñ AI & Machine Learning', color: 'blue' },
    { value: 'apple', label: 'üçé Apple & iOS', color: 'gray' },
    { value: 'games', label: 'üéÆ Games & Gaming', color: 'purple' },
    { value: 'tech', label: '‚ö° Technology', color: 'green' }
  ];

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');
    setResult(null);
    setProgress(0);

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      const progressInterval = setInterval(() => {
        setProgress(prev => prev < 90 ? prev + 10 : prev);
      }, 1000);

      const payload = formData.mode === 'url' 
        ? { 
            action: 'create-from-url',
            url: formData.url,
            category: formData.category
          }
        : { 
            action: 'create-from-text',
            title: formData.title, 
            content: formData.content, 
            category: formData.category 
          };

      const response = await fetch('/api/articles', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });

      clearInterval(progressInterval);
      setProgress(100);

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏');
      }

      setResult(data.data.stats);
      
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setFormData({
        url: '',
        title: '',
        content: '',
        category: 'tech',
        mode: 'url'
      });

    } catch (err) {
      setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      setProgress(0);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
      <div className="flex bg-gray-100 p-1 rounded-lg">
        <button
          type="button"
          onClick={() => setFormData(prev => ({ ...prev, mode: 'url' }))}
          className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
            formData.mode === 'url'
              ? 'bg-white text-blue-700 shadow-sm'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          üìé –ò–∑ URL
        </button>
        <button
          type="button"
          onClick={() => setFormData(prev => ({ ...prev, mode: 'manual' }))}
          className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
            formData.mode === 'manual'
              ? 'bg-white text-blue-700 shadow-sm'
              : 'text-gray-500 hover:text-gray-700'
          }`}
        >
          ‚úçÔ∏è –†—É—á–Ω–æ–π –≤–≤–æ–¥
        </button>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {formData.mode === 'url' ? (
          <div className="space-y-4 transition-all duration-200">
            <div>
              <label htmlFor="url" className="block text-sm font-medium text-gray-700 mb-2">
                URL —Å—Ç–∞—Ç—å–∏
              </label>
              <input
                type="url"
                id="url"
                value={formData.url}
                onChange={(e) => setFormData(prev => ({ ...prev, url: e.target.value }))}
                placeholder="https://example.com/article"
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                required={formData.mode === 'url'}
              />
              <p className="text-xs text-gray-500 mt-1">
                –í–≤–µ–¥–∏—Ç–µ URL —Å—Ç–∞—Ç—å–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
              </p>
            </div>
          </div>
        ) : (
          <div className="space-y-4 transition-all duration-200">
            <div>
              <label htmlFor="title" className="block text-sm font-medium text-gray-700 mb-2">
                –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏
              </label>
              <input
                type="text"
                id="title"
                value={formData.title}
                onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏"
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                required={formData.mode === 'manual'}
              />
            </div>

            <div>
              <label htmlFor="content" className="block text-sm font-medium text-gray-700 mb-2">
                –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
              </label>
              <textarea
                id="content"
                rows={8}
                value={formData.content}
                onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏..."
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-vertical"
                required={formData.mode === 'manual'}
              />
              <p className="text-xs text-gray-500 mt-1">
                –ö–æ–Ω—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ —Å—Ç–∏–ª—å icoffio –∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ –≤—Å–µ —è–∑—ã–∫–∏
              </p>
            </div>

            <div>
              <label htmlFor="category" className="block text-sm font-medium text-gray-700 mb-2">
                –ö–∞—Ç–µ–≥–æ—Ä–∏—è
              </label>
              <select
                id="category"
                value={formData.category}
                onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value as any }))}
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              >
                {categories.map(cat => (
                  <option key={cat.value} value={cat.value}>
                    {cat.label}
                  </option>
                ))}
              </select>
            </div>
          </div>
        )}

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
        {isLoading && (
          <div className="space-y-2">
            <div className="flex justify-between text-sm text-gray-600">
              <span>–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏...</span>
              <span>{progress}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2 overflow-hidden">
              <div
                className="h-full bg-blue-500 rounded-full transition-all duration-500 ease-out"
                style={{ width: `${progress}%` }}
              />
            </div>
            <div className="text-xs text-gray-500 text-center">
              {progress < 30 && "üìñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç..."}
              {progress >= 30 && progress < 60 && "ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é..."}
              {progress >= 60 && progress < 90 && "üåê –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ 5 —è–∑—ã–∫–æ–≤..."}
              {progress >= 90 && "‚úÖ –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..."}
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
        <button
          type="submit"
          disabled={isLoading}
          className={`w-full py-3 px-6 rounded-lg font-medium transition-all duration-200 ${
            isLoading
              ? 'bg-gray-400 cursor-not-allowed'
              : 'bg-blue-600 hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'
          } text-white`}
        >
          {isLoading ? (
            <span className="flex items-center justify-center">
              <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é...
            </span>
          ) : (
            'üöÄ –°–æ–∑–¥–∞—Ç—å –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é'
          )}
        </button>
      </form>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
      {result && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-6 transition-all duration-300 ease-in-out">
          <div className="flex items-start">
            <div className="flex-shrink-0">
              <span className="text-2xl">üéâ</span>
            </div>
            <div className="ml-3 flex-1">
              <h3 className="text-lg font-medium text-green-900 mb-2">
                –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!
              </h3>
              <div className="space-y-1 text-sm text-green-800">
                <p><strong>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</strong> {result.title}</p>
                <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {typeof result.category === 'string' ? result.category : result.category?.name}</p>
                <p><strong>–Ø–∑—ã–∫–æ–≤:</strong> {result.languages}</p>
                <p><strong>URL:</strong> <code>/article/{result.slug}</code></p>
              </div>
              
              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ */}
              <div className="mt-4 p-3 bg-green-100 rounded-lg">
                <h4 className="text-sm font-semibold text-green-900 mb-2">
                  üìä –î–µ—Ç–∞–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏:
                </h4>
                <div className="grid grid-cols-2 gap-2 text-xs text-green-800">
                  <div>ü§ñ –ö–æ–Ω—Ç–µ–Ω—Ç —É–ª—É—á—à–µ–Ω</div>
                  <div>üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ</div>
                  <div>üåç –ü–µ—Ä–µ–≤–æ–¥—ã –≥–æ—Ç–æ–≤—ã</div>
                  <div>üíæ –õ–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ</div>
                </div>
              </div>
              
              {/* –°—Å—ã–ª–∫–∏ –Ω–∞ —è–∑—ã–∫–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ */}
              <div className="mt-3">
                <p className="text-xs text-green-700 mb-2">
                  üîó –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —è–∑—ã–∫–∞—Ö:
                </p>
                <div className="flex flex-wrap gap-2">
                  {['ru', 'en', 'pl', 'de', 'ro', 'cs'].slice(0, result.languages).map(lang => (
                    <span
                      key={lang}
                      className="px-2 py-1 bg-green-200 text-green-800 rounded text-xs font-medium"
                    >
                      {lang.toUpperCase()}
                    </span>
                  ))}
                </div>
              </div>
              
              <p className="text-xs text-green-600 mt-3">
                ‚úÖ –°—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –û—à–∏–±–∫–∞ */}
      {error && (
        <div className="bg-red-50 border border-red-200 rounded-lg p-6 transition-all duration-300 ease-in-out">
          <div className="flex items-start">
            <div className="flex-shrink-0">
              <span className="text-2xl">‚ùå</span>
            </div>
            <div className="ml-3">
              <h3 className="text-lg font-medium text-red-900 mb-2">
                –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏
              </h3>
              <p className="text-sm text-red-800">{error}</p>
              <p className="text-xs text-red-600 mt-2">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 className="text-lg font-medium text-blue-900 mb-3">
          ‚ÑπÔ∏è –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
        </h3>
        <div className="space-y-2 text-sm text-blue-800">
          <div className="flex items-start">
            <span className="mr-2">1Ô∏è‚É£</span>
            <span>–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –ø–æ–¥ —Å—Ç–∏–ª—å icoffio</span>
          </div>
          <div className="flex items-start">
            <span className="mr-2">2Ô∏è‚É£</span>
            <span>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–∏—Ä–∞—é—Ç—Å—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
          </div>
          <div className="flex items-start">
            <span className="mr-2">3Ô∏è‚É£</span>
            <span>–°—Ç–∞—Ç—å—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ 5 —è–∑—ã–∫–æ–≤: EN, PL, DE, RO, CS</span>
          </div>
          <div className="flex items-start">
            <span className="mr-2">4Ô∏è‚É£</span>
            <span>–ö–æ–Ω—Ç–µ–Ω—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è –¥–ª—è SEO –∏ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ</span>
          </div>
        </div>
      </div>
    </div>
  );
}