'use client';

import { useState } from 'react';
import { useAdminStore } from '@/lib/stores/admin-store';

interface AIGenerateProps {
  onSubmit?: () => void;
}

export default function AIGenerate({ onSubmit }: AIGenerateProps) {
  const { addTextToQueue, parsingQueue } = useAdminStore();
  const [topic, setTopic] = useState('');
  const [category, setCategory] = useState('');
  const [tone, setTone] = useState('professional');
  const [length, setLength] = useState('medium');
  const [isSubmitting, setIsSubmitting] = useState(false);

  const categories = [
    { id: 'ai', name: 'AI & Machine Learning', icon: 'ü§ñ' },
    { id: 'apple', name: 'Apple & iOS', icon: 'üçé' },
    { id: 'tech', name: 'Technology', icon: '‚öôÔ∏è' },
    { id: 'digital', name: 'Digital & Trends', icon: 'üì±' }
  ];

  const tones = [
    { id: 'professional', name: 'Professional', icon: 'üíº' },
    { id: 'casual', name: 'Casual', icon: 'üòä' },
    { id: 'technical', name: 'Technical', icon: 'üîß' },
    { id: 'news', name: 'News Style', icon: 'üì∞' }
  ];

  const lengths = [
    { id: 'short', name: 'Short (500-800 words)', icon: 'üìù' },
    { id: 'medium', name: 'Medium (800-1200 words)', icon: 'üìÑ' },
    { id: 'long', name: 'Long (1200-2000 words)', icon: 'üìÉ' }
  ];

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!topic.trim()) return;

    setIsSubmitting(true);
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã
      const generatedTitle = `${topic}: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –∞–Ω–∞–ª–∏–∑`;
      const generatedContent = `–¢–µ–º–∞: ${topic}

–≠—Ç–æ —Å—Ç–∞—Ç—å—è, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ò–ò –Ω–∞ —Ç–µ–º—É "${topic}". 

## –í–≤–µ–¥–µ–Ω–∏–µ
${topic} - —ç—Ç–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –í –¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–µ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.

## –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
–ú—ã –¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑—É—á–∏–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –ø–æ —Ç–µ–º–µ "${topic}", –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ —á–∏—Ç–∞—Ç–µ–ª—è–º –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–º–æ–π "${topic}".

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
–ü–æ–¥–≤–æ–¥—è –∏—Ç–æ–≥–∏ –ø–æ —Ç–µ–º–µ "${topic}", –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è.

–°—Ç–∏–ª—å: ${tone}
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category || 'tech'}
–î–ª–∏–Ω–∞: ${length} —Å—Ç–∞—Ç—å—è`;

      await addTextToQueue(generatedTitle, generatedContent, category || 'tech');
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      setTopic('');
      setCategory('');
      setTone('professional');
      setLength('medium');
      
      onSubmit?.();
    } catch (error) {
      console.error('Error generating AI article:', error);
      // TODO: –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—à–∏–±–∫—É
    } finally {
      setIsSubmitting(false);
    }
  };

  const isFormValid = topic.trim();

  return (
    <div className="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2 flex items-center gap-2">
          <span>ü§ñ</span>
          Generate Article with AI
        </h3>
        <p className="text-gray-600 dark:text-gray-400">
          –û–ø–∏—à–∏—Ç–µ —Ç–µ–º—É, –∏ –ò–ò —Å–æ–∑–¥–∞—Å—Ç –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç—å—é —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –≤—Å–µ —è–∑—ã–∫–∏
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* Topic Input */}
        <div className="space-y-2">
          <label htmlFor="ai-topic" className="block text-sm font-medium text-gray-700 dark:text-gray-300">
            Article Topic
          </label>
          <div className="relative">
            <input
              id="ai-topic"
              type="text"
              value={topic}
              onChange={(e) => setTopic(e.target.value)}
              className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg 
                       bg-white dark:bg-gray-700 text-gray-900 dark:text-white
                       focus:ring-2 focus:ring-blue-500 focus:border-transparent
                       placeholder:text-gray-500 dark:placeholder:text-gray-400"
              placeholder="e.g., 'Latest advances in machine learning', 'iPhone 15 features', 'Cybersecurity trends 2024'"
              disabled={isSubmitting}
            />
            <div className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400">
              <span className="text-lg">üí°</span>
            </div>
          </div>
        </div>

        {/* Category Selection */}
        <div className="space-y-2">
          <label className="block text-sm font-medium text-gray-700 dark:text-gray-300">
            Category
          </label>
          <div className="grid grid-cols-2 gap-2">
            {categories.map((cat) => (
              <button
                key={cat.id}
                type="button"
                onClick={() => setCategory(category === cat.id ? '' : cat.id)}
                className={`px-4 py-2 rounded-lg border flex items-center gap-2 transition-all ${
                  category === cat.id
                    ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-700 text-blue-700 dark:text-blue-300'
                    : 'bg-white dark:bg-gray-700 border-gray-200 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'
                }`}
                disabled={isSubmitting}
              >
                <span>{cat.icon}</span>
                <span className="text-sm font-medium">{cat.name}</span>
              </button>
            ))}
          </div>
        </div>

        {/* Tone Selection */}
        <div className="space-y-2">
          <label className="block text-sm font-medium text-gray-700 dark:text-gray-300">
            Writing Style
          </label>
          <div className="grid grid-cols-2 gap-2">
            {tones.map((t) => (
              <button
                key={t.id}
                type="button"
                onClick={() => setTone(t.id)}
                className={`px-3 py-2 rounded-lg border flex items-center gap-2 transition-all ${
                  tone === t.id
                    ? 'bg-purple-50 dark:bg-purple-900/20 border-purple-200 dark:border-purple-700 text-purple-700 dark:text-purple-300'
                    : 'bg-white dark:bg-gray-700 border-gray-200 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'
                }`}
                disabled={isSubmitting}
              >
                <span>{t.icon}</span>
                <span className="text-sm font-medium">{t.name}</span>
              </button>
            ))}
          </div>
        </div>

        {/* Length Selection */}
        <div className="space-y-2">
          <label className="block text-sm font-medium text-gray-700 dark:text-gray-300">
            Article Length
          </label>
          <div className="space-y-2">
            {lengths.map((l) => (
              <button
                key={l.id}
                type="button"
                onClick={() => setLength(l.id)}
                className={`w-full px-3 py-2 rounded-lg border flex items-center gap-2 transition-all text-left ${
                  length === l.id
                    ? 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-700 text-green-700 dark:text-green-300'
                    : 'bg-white dark:bg-gray-700 border-gray-200 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600'
                }`}
                disabled={isSubmitting}
              >
                <span>{l.icon}</span>
                <span className="text-sm font-medium">{l.name}</span>
              </button>
            ))}
          </div>
        </div>

        {/* Submit Button */}
        <div className="flex items-center gap-4 pt-2">
          <button
            type="submit"
            disabled={!isFormValid || isSubmitting}
            className={`px-6 py-3 rounded-lg flex items-center gap-2 font-medium transition-all ${
              isFormValid && !isSubmitting
                ? 'bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white shadow-sm hover:shadow'
                : 'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed'
            }`}
          >
            {isSubmitting ? (
              <>
                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                <span>Generating...</span>
              </>
            ) : (
              <>
                <span>ü§ñ</span>
                <span>Generate Article</span>
              </>
            )}
          </button>

          {parsingQueue.length > 0 && (
            <div className="text-sm text-gray-600 dark:text-gray-400 flex items-center gap-2">
              <span>üìä</span>
              <span>{parsingQueue.length} article{parsingQueue.length !== 1 ? 's' : ''} in queue</span>
            </div>
          )}
        </div>
      </form>

      {/* AI Generation Tips */}
      <div className="mt-8 p-4 bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20 rounded-lg">
        <h4 className="font-medium text-gray-900 dark:text-white mb-2 flex items-center gap-2">
          <span>üß†</span>
          AI Generation Tips
        </h4>
        <ul className="text-sm text-gray-600 dark:text-gray-400 space-y-1">
          <li>‚Ä¢ <strong>–ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã:</strong> "iPhone 15 Pro camera features" –ª—É—á—à–µ —á–µ–º "phone cameras"</li>
          <li>‚Ä¢ <strong>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> –í–∫–ª—é—á–∞–π—Ç–µ –≤–∞–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è SEO</li>
          <li>‚Ä¢ <strong>–ò–ò —É–ª—É—á—à–µ–Ω–∏—è:</strong> –ö–æ–Ω—Ç–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏</li>
          <li>‚Ä¢ <strong>–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å:</strong> –°—Ç–∞—Ç—å—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –Ω–∞ 6 —è–∑—ã–∫–æ–≤ (EN, PL, DE, RO, CS)</li>
          <li>‚Ä¢ <strong>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</strong> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–∏—Ä–∞—é—Ç—Å—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</li>
        </ul>
      </div>
    </div>
  );
}
