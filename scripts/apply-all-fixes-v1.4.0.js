#!/usr/bin/env node

/**
 * üöÄ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô v1.4.0
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–º–µ–Ω—è–µ—Ç:
 * 1. SQL –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Å—Ç–∞—Ä—ã—Ö —Å—Ç–∞—Ç–µ–π
 * 2. –ù–∞—Å—Ç—Ä–æ–π–∫—É 301 —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ 
 * 3. –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π
 * 4. –ü—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 */

const fs = require('fs');
const path = require('path');
const https = require('https');

console.log('üöÄ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô v1.4.0');
console.log('================================================');
console.log('');

const API_BASE = 'https://app.icoffio.com';
const ADMIN_AUTH = 'Bearer icoffio-admin-2025';

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function makeRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const req = https.request(url, {
      method: options.method || 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': ADMIN_AUTH,
        ...options.headers
      }
    }, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          const parsed = JSON.parse(data);
          resolve({ status: res.statusCode, data: parsed });
        } catch (e) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    });
    
    req.on('error', reject);
    
    if (options.body) {
      req.write(JSON.stringify(options.body));
    }
    
    req.end();
  });
}

// –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
async function checkSystemReadiness() {
  console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´');
  console.log('===============================');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API slug-quality
    console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º API –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞...');
    const qualityCheck = await makeRequest(`${API_BASE}/api/slug-quality`);
    
    if (qualityCheck.status === 200) {
      const stats = qualityCheck.data.summary;
      console.log(`‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ ${stats.longSlugs} –¥–ª–∏–Ω–Ω—ã—Ö slug'–æ–≤`);
      
      if (stats.longSlugs === 0) {
        console.log('‚ÑπÔ∏è –î–ª–∏–Ω–Ω—ã–µ slug\'–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ú–∏–≥—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è.');
      }
    } else {
      console.log(`‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: ${qualityCheck.status})`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π API —Å—Ç–∞—Ç–µ–π
    console.log('üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π...');
    const articlesCheck = await makeRequest(`${API_BASE}/api/articles`);
    
    if (articlesCheck.status === 200) {
      const supportedLangs = articlesCheck.data.supportedLanguages || [];
      console.log(`‚úÖ API —Å—Ç–∞—Ç–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç. –Ø–∑—ã–∫–∏: ${supportedLangs.join(', ')}`);
      
      if (supportedLangs.includes('ru')) {
        console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö!');
      } else {
        console.log('‚úÖ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö');
      }
    }
    
    console.log('');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã:', error.message);
    return false;
  }
}

// –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –≤—ã–≤–æ–¥ SQL –º–∏–≥—Ä–∞—Ü–∏–∏
async function generateSQLMigration() {
  console.log('2Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê SQL –ú–ò–ì–†–ê–¶–ò–ò');
  console.log('===========================');
  
  try {
    const sqlFile = path.join(__dirname, 'PRODUCTION_READY_MIGRATION_v1.4.0.sql');
    
    if (fs.existsSync(sqlFile)) {
      console.log(`‚úÖ SQL —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${sqlFile}`);
      
      // –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞
      const sqlContent = fs.readFileSync(sqlFile, 'utf8');
      const lines = sqlContent.split('\\n').slice(0, 10);
      
      console.log('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (–ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏):');
      console.log('----------------------------------------');
      lines.forEach(line => console.log(line));
      console.log('...');
      console.log('');
      
      console.log('üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ SQL:');
      console.log('1. –°–æ–∑–¥–∞–π—Ç–µ –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress');
      console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ phpMyAdmin –∏–ª–∏ MySQL –∫–æ–Ω—Å–æ–ª—å'); 
      console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Ñ–∞–π–ª–∞ PRODUCTION_READY_MIGRATION_v1.4.0.sql');
      console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
      console.log('');
      
      return true;
    } else {
      console.log('‚ùå SQL —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
    return false;
  }
}

// –®–∞–≥ 3: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ 301 —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
async function prepare301Redirects() {
  console.log('3Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê 301 –†–ï–î–ò–†–ï–ö–¢–û–í');
  console.log('=============================');
  
  try {
    const htaccessFile = path.join(__dirname, 'PRODUCTION_READY_REDIRECTS_v1.4.0.htaccess');
    
    if (fs.existsSync(htaccessFile)) {
      console.log(`‚úÖ .htaccess —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${htaccessFile}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
      const htaccessContent = fs.readFileSync(htaccessFile, 'utf8');
      const redirectRules = htaccessContent.match(/RewriteRule.*\\[R=301,L\\]/g) || [];
      
      console.log(`üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ ${redirectRules.length} –ø—Ä–∞–≤–∏–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤`);
      console.log('üìÑ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª:');
      console.log('-------------------');
      redirectRules.slice(0, 3).forEach(rule => console.log(rule));
      console.log('...');
      console.log('');
      
      console.log('üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–†–ò–ú–ï–ù–ï–ù–ò–Æ .HTACCESS:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä WordPress —Ö–æ—Å—Ç–∏–Ω–≥–∞');
      console.log('2. –ù–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª .htaccess –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
      console.log('3. –î–æ–±–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PRODUCTION_READY_REDIRECTS_v1.4.0.htaccess');
      console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã: curl -I https://app.icoffio.com/—Å—Ç–∞—Ä—ã–π-url');
      console.log('');
      
      return true;
    } else {
      console.log('‚ùå .htaccess —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤:', error.message);
    return false;
  }
}

// –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
async function startMonitoring() {
  console.log('4Ô∏è‚É£ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê');
  console.log('===============================');
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞...');
    const monitorCheck = await makeRequest(`${API_BASE}/api/admin/monitor-articles?timeframe=24h`);
    
    if (monitorCheck.status === 200) {
      const result = monitorCheck.data;
      console.log(`‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç (–≤–µ—Ä—Å–∏—è ${result.version})`);
      console.log(`üìà –°—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è: ${result.health.status.toUpperCase()}`);
      console.log(`üìä –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –∑–∞ 24—á: ${result.statistics.totalNew}`);
      console.log(`üö® –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: ${result.statistics.longSlugs + result.statistics.russianArticles}`);
      
      if (result.recommendations.length > 0) {
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        result.recommendations.forEach((rec, i) => console.log(`   ${i + 1}. ${rec}`));
      }
      
      console.log('');
      console.log('üîó –°—Å—ã–ª–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:');
      console.log(`   ‚Ä¢ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: ${API_BASE}/api/admin/monitor-articles`);
      console.log(`   ‚Ä¢ Slack —Ñ–æ—Ä–º–∞—Ç: ${API_BASE}/api/admin/monitor-articles?format=slack`);
      console.log(`   ‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ slug'–æ–≤: ${API_BASE}/api/slug-quality`);
      
    } else {
      console.log(`‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: ${monitorCheck.status})`);
    }
    
    console.log('');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', error.message);
    return false;
  }
}

// –®–∞–≥ 5: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
async function finalVerification() {
  console.log('5Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê');
  console.log('======================');
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —Å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —Å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º...');
    
    const testArticle = {
      action: 'create-from-text',
      title: 'Final Verification Test Article With Very Long Title That Should Be Automatically Shortened By New Validation System After All Fixes Applied v1.4.0',
      content: 'This is a final verification test to ensure all slug fixes are working correctly.',
      category: 'tech',
      author: 'Automated Test System v1.4.0'
    };
    
    const createResult = await makeRequest(`${API_BASE}/api/articles`, {
      method: 'POST',
      body: testArticle
    });
    
    if (createResult.status === 200 && createResult.data.success) {
      const createdSlug = createResult.data.data?.stats?.slug || 'unknown';
      console.log(`‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
      console.log(`üìè –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π slug: ${createdSlug} (${createdSlug.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
      
      if (createdSlug.length <= 50) {
        console.log('‚úÖ –î–ª–∏–Ω–∞ slug –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã!');
      } else {
        console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: slug –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π!');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
      const languages = createdResult.data.data?.posts ? Object.keys(createResult.data.data.posts) : [];
      console.log(`üåç –°–æ–∑–¥–∞–Ω—ã –≤–µ—Ä—Å–∏–∏ –Ω–∞ —è–∑—ã–∫–∞—Ö: ${languages.join(', ')}`);
      
      if (languages.includes('ru')) {
        console.log('‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û: –í—Å–µ –µ—â–µ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ä—É—Å—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏!');
      } else {
        console.log('‚úÖ –†—É—Å—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è');
      }
      
    } else {
      console.log(`‚ö†Ô∏è –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ –Ω–µ –ø—Ä–æ—à–µ–ª (—Å—Ç–∞—Ç—É—Å: ${createResult.status})`);
    }
    
    console.log('');
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
    return false;
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log(`–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toISOString()}`);
  console.log('');
  
  let success = 0;
  const totalSteps = 5;
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —à–∞–≥–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
  if (await checkSystemReadiness()) success++;
  if (await generateSQLMigration()) success++;  
  if (await prepare301Redirects()) success++;
  if (await startMonitoring()) success++;
  if (await finalVerification()) success++;
  
  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('üèÅ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
  console.log('==================');
  console.log(`‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —à–∞–≥–æ–≤: ${success}/${totalSteps}`);
  console.log(`üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${Math.round(success / totalSteps * 100)}%`);
  console.log('');
  
  if (success === totalSteps) {
    console.log('üéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –£–°–ü–ï–®–ù–û –ü–†–ò–ú–ï–ù–ï–ù–´!');
    console.log('');
    console.log('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. ‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å SQL –º–∏–≥—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é –≤ phpMyAdmin');
    console.log('2. ‚úÖ –î–æ–±–∞–≤–∏—Ç—å .htaccess –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä');
    console.log('3. ‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥');
    console.log('4. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ —á–µ—Ä–µ–∑ 10-15 –º–∏–Ω—É—Ç');
  } else {
    console.log('‚ö†Ô∏è –ù–ï –í–°–ï –®–ê–ì–ò –í–´–ü–û–õ–ù–ï–ù–´ –£–°–ü–ï–®–ù–û');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –Ω–µ—É–¥–∞–≤—à–∏–µ—Å—è –æ–ø–µ—Ä–∞—Ü–∏–∏');
  }
  
  console.log('');
  console.log('üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:');
  console.log('‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: https://app.icoffio.com/api/admin/monitor-articles');
  console.log('‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ slug\'–æ–≤: https://app.icoffio.com/api/slug-quality');
  console.log('‚Ä¢ API —Å—Ç–∞—Ç–µ–π: https://app.icoffio.com/api/articles');
  console.log('');
  console.log(`–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: ${new Date().toISOString()}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(error => {
  console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–ö–†–ò–ü–¢–ê:', error);
  process.exit(1);
});
