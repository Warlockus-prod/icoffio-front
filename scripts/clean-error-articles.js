/**
 * üßπ –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –û–®–ò–ë–û–ß–ù–´–• –°–¢–ê–¢–ï–ô
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å –æ—à–∏–±–∫–∞–º–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ WordPress
 */

const { wordpressService } = require('../lib/wordpress-service');

async function cleanErrorArticles() {
  console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –æ—à–∏–±–æ—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π...');
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ WordPress
    console.log('üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π...');
    const response = await fetch('https://app.icoffio.com/api/wordpress-articles');
    const data = await response.json();
    
    if (!data.success) {
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å–∏: ${data.error}`);
    }
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${data.articles.length} —Å—Ç–∞—Ç–µ–π`);
    
    // 2. –§–∏–ª—å—Ç—Ä—É–µ–º –æ—à–∏–±–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
    const errorArticles = data.articles.filter(article => {
      const hasExtractError = article.content && (
        article.content.includes('–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á—å –∫–æ–Ω—Ç–µ–Ω—Ç') ||
        article.content.includes('Failed to automatically extract content') ||
        article.content.includes('HTTP 403') ||
        article.content.includes('Forbidden') ||
        article.content.includes('wylsa.com')
      );
      
      const hasErrorTitle = article.title && (
        article.title.includes('Article from wylsa.com') ||
        article.title.includes('–°—Ç–∞—Ç—å—è —Å wylsa.com')
      );
      
      return hasExtractError || hasErrorTitle;
    });
    
    console.log(`üö® –ù–∞–π–¥–µ–Ω–æ ${errorArticles.length} –æ—à–∏–±–æ—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:`);
    
    errorArticles.forEach((article, index) => {
      console.log(`${index + 1}. ID: ${article.id} | ${article.title} | ${new Date(article.publishedAt).toLocaleDateString()}`);
    });
    
    if (errorArticles.length === 0) {
      console.log('‚úÖ –û—à–∏–±–æ—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
      return;
    }
    
    // 3. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç—Ç–∏ —Å—Ç–∞—Ç—å–∏?');
    console.log('–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å —Ñ–ª–∞–≥–æ–º --confirm');
    
    if (!process.argv.includes('--confirm')) {
      console.log('‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run clean-errors -- --confirm');
      return;
    }
    
    // 4. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —á–µ—Ä–µ–∑ WordPress API
    console.log('\nüóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...');
    let deletedCount = 0;
    let failedCount = 0;
    
    for (const article of errorArticles) {
      try {
        console.log(`üóëÔ∏è  –£–¥–∞–ª—è–µ–º: ${article.title}...`);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—å—é —á–µ—Ä–µ–∑ WordPress REST API
        const deleteResponse = await fetch(`https://icoffio.com/wp-json/wp/v2/posts/${article.id}`, {
          method: 'DELETE',
          headers: {
            'Authorization': `Bearer ${process.env.WORDPRESS_API_KEY}`,
            'Content-Type': 'application/json'
          }
        });
        
        if (deleteResponse.ok) {
          console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞: ${article.title}`);
          deletedCount++;
        } else {
          console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${article.title} (${deleteResponse.status})`);
          failedCount++;
        }
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —É–¥–∞–ª–µ–Ω–∏—è–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${article.title}:`, error.message);
        failedCount++;
      }
    }
    
    // 5. –û—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    console.log('\nüìä –û–¢–ß–ï–¢ –û –û–ß–ò–°–¢–ö–ï:');
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ: ${deletedCount} —Å—Ç–∞—Ç–µ–π`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${failedCount} —Å—Ç–∞—Ç–µ–π`);
    console.log(`üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${deletedCount + failedCount} –∏–∑ ${errorArticles.length}`);
    
    if (deletedCount > 0) {
      console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—à–∏–±–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ WordPress.');
      console.log('‚è±Ô∏è  –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—è–≤—è—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 –º–∏–Ω—É—Ç.');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  cleanErrorArticles()
    .then(() => {
      console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

module.exports = { cleanErrorArticles };






